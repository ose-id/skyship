import type { NextSeoProps } from "next-seo";
export type Size = "sm" | "md" | "lg";
export type Variant = "primary" | "neutral";
export type Position = "left" | "right";

export interface IMetaSeo extends NextSeoProps {
  title: string;
}

export type UnionToKeys<T extends string | number | symbol, U> = {
  [key in T]: U extends infer R ? R : never;
};

export type SizeDict = UnionToKeys<Size, string>;

// Generated by https://quicktype.io

export interface Post {
  _id: string;
  author: Author;
  title: string;
  body: Body[];
  excerpt: string;
  categories: any[];
  coverImage: CoverImage;
  publishedAt: string;
  slug: string;
}

export interface Author {
  image: Image;
  name: string;
}

export interface Image {
  _type: string;
  asset: Asset;
  crop: Crop;
  hotspot: Hotspot;
}

export interface Asset {
  _ref: string;
  _type: string;
}

export interface Crop {
  _type: string;
  bottom: number;
  left: number;
  right: number;
  top: number;
}

export interface Hotspot {
  _type: string;
  height: number;
  width: number;
  x: number;
  y: number;
}

export interface Body {
  _key: string;
  _type: string;
  children: Child[];
  markDefs: any[];
  style: string;
}

export interface Child {
  _key: string;
  _type: string;
  marks: any[];
  text: string;
}

export interface CoverImage {
  _type: string;
  asset: Asset;
}
